var searchData=
[
  ['cert_3',['cert',['../class_secure_server.html#a1d8dd8c08335f104375e03ad19afdd43',1,'SecureServer']]],
  ['cmake_5fminimum_5frequired_4',['cmake_minimum_required',['../_secure_client_2_c_make_lists_8txt.html#a50baa12d153838bf9910701bc861d0a7',1,'cmake_minimum_required(VERSION 3.6.0) project(SecureClient VERSION 1.0 DESCRIPTION &quot;Qt &amp; ssl based Secure TCP Client&quot; LANGUAGES CXX) set(CMAKE_CXX_STANDARD 11) set(CMAKE_CXX_STANDARD_REQUIRED ON) set(CMAKE_AUTOMOC ON) set(CMAKE_AUTORCC ON) set(CMAKE_AUTOUIC ON) if(CMAKE_VERSION VERSION_LESS &quot;3.7.0&quot;) set(CMAKE_INCLUDE_CURRENT_DIR ON) endif() find_package(Qt5 COMPONENTS Widgets REQUIRED) find_package(Qt5Core REQUIRED) find_package(OpenSSL REQUIRED) set(SRC_FILES main.cpp MainWindow.cpp SecureClient.cpp) set(HEADER_FILES MainWindow.h SecureClient.h) set(UI_FILES MainWindow.ui) set(QRC_FILES resources.qrc) add_executable($:&#160;CMakeLists.txt'],['../_secure_server_2_c_make_lists_8txt.html#aae588ff19739f7afe531ce2572084427',1,'cmake_minimum_required(VERSION 3.6.0) project(SecureServer VERSION 1.0 DESCRIPTION &quot;Qt &amp; ssl based Secure TCP Server&quot; LANGUAGES CXX) set(CMAKE_CXX_STANDARD 11) set(CMAKE_CXX_STANDARD_REQUIRED ON) set(CMAKE_AUTOMOC ON) set(CMAKE_AUTORCC ON) set(CMAKE_AUTOUIC ON) if(CMAKE_VERSION VERSION_LESS &quot;3.7.0&quot;) set(CMAKE_INCLUDE_CURRENT_DIR ON) endif() find_package(Qt5Core REQUIRED) find_package(OpenSSL REQUIRED) set(SRC_FILES main.cpp SecureServer.cpp New_sClient.cpp) set(HEADER_FILES SecureServer.h New_sClient.h) set(QRC_FILES resources.qrc) add_executable($:&#160;CMakeLists.txt']]],
  ['cmakelists_2etxt_5',['CMakeLists.txt',['../_c_make_lists_8txt.html',1,'(Global Namespace)'],['../_secure_client_2_c_make_lists_8txt.html',1,'(Global Namespace)'],['../_secure_server_2_c_make_lists_8txt.html',1,'(Global Namespace)']]]
];
